{"version":3,"sources":["assets/noPosterSmall.png","assets/loadingBgSmall.gif","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/TabPresenter.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/index.js","Routes/Collection/CollectionContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/Theme.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","prototype","PropTypes","string","isRequired","oneOfType","arrayOf","node","Loader","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","key","id","imageUrl","rating","year","isMovie","to","require","aira-label","length","substring","number","bool","HomePresenter","nowPlaying","popular","upcoming","error","loading","Helmet","map","movie","poster_path","vote_average","release_date","api","axios","create","baseURL","interceptors","request","use","config","params","moviesApi","get","append_to_response","term","query","tvApi","collectionApi","HomeContainer","state","data","results","this","setState","console","log","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","updateTerm","handleSubmit","onSubmit","placeholder","value","onChange","original_title","SearchContainer","event","preventDefault","searchByTerm","target","a","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","STabs","Tabs","STabList","TabList","tabsRole","STab","Tab","STabPanel","TabPanel","VideoContainer","Video","iframe","TitleInfo","h3","ProductionContainer","CompaniesContainer","Company","ContriesContainer","CountryName","TextInfo","p","GridContainer","ItemImg","ItemName","ItemDate","TabPresenter","result","selectedTabClassName","selectedTabPanelClassName","videos","created_by","seasons","width","height","src","frameborder","allow","allowfullscreen","production_companies","company","index","logo_path","name","production_countries","country","countryCode","iso_3166_1","svg","style","profile","profile_path","season","air_date","Backdrop","bgImage","Content","Cover","Data","CollectionLink","ItemContainer","ImdbBtn","Divider","Overview","DetailPresenter","backdrop_path","runtime","episode_run_time","genres","genre","imdb_id","href","rel","belongs_to_collection","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","CollectionPresenter","parts","item","object","CollectionContainer","isCollection","parseId","path","exact","component","Home","TV","Search","Detail","Collection","from","globalStyles","createGlobalStyle","reset","size","theme","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","App","Router","GlobalStyles","Theme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41442cb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","module.exports = __webpack_public_path__ + \"static/media/loadingBgSmall.d0ed0a5c.gif\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child){\r\n        margin-bottom: 25px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    font-size: 14px;\r\n    font-weight: 600;   \r\n`;\r\n\r\n\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 125px);\r\n    grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({title, children}) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.prototype = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 28px;\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst Loader = () => (\r\n    <Container>\r\n        <span role=\"img\" aria-label=\"Loading\">\r\n            ⏰\r\n        </span>\r\n    </Container>\r\n);\r\n\r\nexport default Loader;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Text = styled.div`\r\n    color: ${props => props.color};\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Message = ({ color, text }) => (\r\n    <Container>\r\n        <Text color={color}>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nMessage.prototype = {\r\n    text:PropTypes.string.isRequired,\r\n    color:PropTypes.string.isRequired\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  display: block;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-top: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({key, id, imageUrl, title, rating, year, isMovie = false}) => (\r\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image bgUrl={imageUrl ? \r\n                    `https://image.tmdb.org/t/p/w300${imageUrl}` \r\n                    : require(\"../assets/noPosterSmall.png\")}>\r\n\r\n                </Image>\r\n                <Rating>\r\n                <span role=\"img\" aira-label=\"rating\">\r\n                    ⭐️\r\n                </span>{\" \"}\r\n                {rating}/10\r\n            </Rating>\r\n            </ImageContainer>\r\n            <Title>{title.length > 18 ? `${title.substring(0,18)}...` : title}</Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n    </Link>\r\n    \r\n);\r\n\r\nPoster.prototype = {\r\n    id: PropTypes.number.isRequired,\r\n    imageUrl: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n}\r\n\r\nexport default Poster;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Helmet } from 'react-helmet';\r\nimport Section from 'Components/Section'\r\nimport Loader from 'Components/Loader';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({nowPlaying, popular, upcoming, error, loading}) => ( \r\n<>\r\n<Helmet>\r\n    <title>Movies | Nomflix</title>\r\n</Helmet>\r\n{loading ? (<Loader/>) : (\r\n    <Container>\r\n        <Helmet>\r\n            <title>Movies | Nomflix</title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n        <Section title=\"Now Playing\">\r\n            {nowPlaying.map(movie => \r\n                <Poster \r\n                key={movie.id} \r\n                id={movie.id} \r\n                imageUrl={movie.poster_path}\r\n                title={movie.title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n                />\r\n            )}\r\n        </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Movies\">\r\n            {popular.map(movie => \r\n                <Poster \r\n                key={movie.id} \r\n                id={movie.id} \r\n                imageUrl={movie.poster_path}\r\n                title={movie.title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n                />\r\n            )}\r\n        </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n        <Section title=\"Upcoming Movies\">\r\n            {upcoming.map(movie => \r\n                <Poster \r\n                key={movie.id} \r\n                id={movie.id} \r\n                imageUrl={movie.poster_path}\r\n                title={movie.title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n                />\r\n            )}\r\n        </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error}/>}\r\n    </Container>\r\n    )}\r\n    </>\r\n);\r\n\r\nHomePresenter.propTypes ={\r\n    nowPlaying:PropTypes.array,\r\n    upcoming:PropTypes.array,\r\n    popular:PropTypes.array,\r\n    loading:PropTypes.bool.isRequired,\r\n    error:PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\"\r\n});\r\n\r\napi.interceptors.request.use(config => {\r\n    config.params = config.params || {};\r\n    config.params['api_key'] = \"79588a038f3a91810241f5cb17b24d0e\";\r\n    //config.params['language'] = \"en-US\";\r\n    config.params['language'] = \"ko-KR\";\r\n    return config;\r\n})\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: id => api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n    search: term => api.get(\"search/movie\", {\r\n        params: {\r\n            query: term\r\n        }\r\n    })\r\n}\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    showDetail: id => api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n    search: term => api.get(\"search/tv\", {\r\n        params: {\r\n            query: term\r\n        }\r\n    })\r\n}\r\n\r\nexport const collectionApi = {\r\n  collection: id => api.get(`collection/${id}`)\r\n}\r\n\r\nexport default api;","import HomeContainer from './HomeContainer';\r\n\r\nexport default HomeContainer;","import React from 'react';\r\nimport HomePresenter from './HomePresenter';\r\nimport { moviesApi } from 'api';\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        loading: true,\r\n        error: null\r\n    };\r\n\r\n     async componentDidMount(){\r\n        try{\r\n            const {\r\n                data: { results: nowPlaying }\r\n            } = await moviesApi.nowPlaying();\r\n            \r\n            const {\r\n                data: { results: upcoming}\r\n            } = await moviesApi.upcoming();\r\n\r\n            const {\r\n                data: { results: popular}\r\n            } = await moviesApi.popular();\r\n            this.setState({ nowPlaying, upcoming, popular });\r\n        }catch(error){\r\n            this.setState({\r\n                error: \"Can't find movies information.\"\r\n            });\r\n        }finally{\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n        console.log(this.state);\r\n        return (\r\n            <HomePresenter\r\n            nowPlaying={nowPlaying}\r\n            upcoming={upcoming}\r\n            popular={popular}\r\n            error={error}\r\n            loading={loading}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Helmet } from 'react-helmet';\r\nimport Section from 'Components/Section';\r\nimport Loader from 'Components/Loader';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n\r\n`;\r\n\r\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) => (\r\n<>\r\n<Helmet>\r\n    <title>TV | Nomflix</title>\r\n</Helmet>\r\n{loading ? (<Loader/>) :(\r\n    <Container>\r\n        {topRated && topRated.length > 0 && (\r\n            <Section title=\"Top Rated Shows\">\r\n                {topRated.map(show => \r\n                    <Poster \r\n                    key={show.id} \r\n                    id={show.id} \r\n                    imageUrl={show.poster_path}\r\n                    title={show.original_name}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date.substring(0, 4)}\r\n                    isMovie={false}\r\n                    />    \r\n                )}\r\n            </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n            <Section title=\"Popular Shows\">\r\n                {popular.map(show => \r\n                    <Poster \r\n                    key={show.id} \r\n                    id={show.id} \r\n                    imageUrl={show.poster_path}\r\n                    title={show.original_name}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date.substring(0, 4)}\r\n                    isMovie={false}\r\n                    />     \r\n                )}\r\n            </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n            <Section title=\"Airing Today Shows\">\r\n                {airingToday.map(show =>\r\n                    <Poster \r\n                    key={show.id} \r\n                    id={show.id} \r\n                    imageUrl={show.poster_path}\r\n                    title={show.original_name}\r\n                    rating={show.vote_average}\r\n                    year={show.first_air_date.substring(0, 4)}\r\n                    isMovie={false}\r\n                    />     \r\n                )}\r\n            </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error}/>}\r\n    </Container>\r\n)}\r\n</>\r\n);\r\n\r\n\r\nTVPresenter.propTypes ={\r\n    topRated:PropTypes.array,\r\n    popular:PropTypes.array,\r\n    airingToday:PropTypes.array,\r\n    loading:PropTypes.bool.isRequired,\r\n    error:PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from './TVContainer';\r\n\r\nexport default TVContainer;","import React from 'react';\r\nimport TVPresenter from './TVPresenter';\r\nimport { tvApi } from 'api';\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        loading: true,\r\n        error: null\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const {\r\n                data: { results: topRated }\r\n            } = await tvApi.topRated();\r\n            const {\r\n                data: { results: popular }\r\n            }  = await tvApi.popular();\r\n            const {\r\n                data: { results: airingToday }\r\n            }  = await tvApi.airingToday();\r\n\r\n            this.setState({ topRated, popular, airingToday })\r\n        }catch{\r\n            this.setState({\r\n                error: \"Can't find TV information.\"\r\n            })\r\n\r\n        }finally{\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { topRated, popular, airingToday, error, loading } = this.state;\r\n        console.log(this.state);\r\n        return (\r\n            <TVPresenter\r\n            topRated={topRated}\r\n            popular={popular}\r\n            airingToday={airingToday}\r\n            error={error}\r\n            loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Helmet } from 'react-helmet';\r\nimport Section from 'Components/Section';\r\nimport Loader from 'Components/Loader';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom: 50px; \r\n    width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all: unset;\r\n    font-size: 28px;\r\n    width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({movieResults, tvResults, loading, searchTerm, updateTerm, handleSubmit, error}) => \r\n(\r\n    <Container>\r\n    <Helmet>\r\n        <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n        <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm}/>\r\n    </Form>\r\n    {loading ? <Loader/> : <>\r\n        {movieResults && movieResults.length > 0 && \r\n            <Section title=\"Movie Results\">\r\n                {movieResults.map(movie => (\r\n                    <Poster \r\n                    key={movie.id} \r\n                    id={movie.id} \r\n                    imageUrl={movie.poster_path}\r\n                    title={movie.original_title}\r\n                    rating={movie.vote_average}\r\n                    year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                    isMovie={true}\r\n                    />\r\n                ))}\r\n            </Section>}\r\n        {tvResults && tvResults.length > 0 && \r\n        <Section title=\"TV Results\">\r\n            {tvResults.map(show => (\r\n                <Poster \r\n                key={show.id} \r\n                id={show.id} \r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date && show.first_air_date.substring( 0,4 )}\r\n                />   \r\n            ))}\r\n        </Section>}\r\n        {error && <Message color=\"#e74c3c\" text={error}/>}\r\n        {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\r\n            <Message text=\"Nothing found\" color=\"#95a5a6\"/>\r\n        )}\r\n    </>}\r\n</Container>);\r\n\r\nSearchPresenter.propTypes ={\r\n    movieResults:PropTypes.array,\r\n    tvResults:PropTypes.array,\r\n    searchTerm:PropTypes.string,\r\n    loading:PropTypes.bool.isRequired,\r\n    error:PropTypes.string,\r\n    handleSubmit:PropTypes.func.isRequired,\r\n    updateTerm:PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from './SearchContainer';\r\n\r\nexport default SearchContainer;","import React from 'react';\r\nimport SearchPresenter from './SearchPresenter';\r\nimport { moviesApi, tvApi } from '../../api';\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        loading: false,\r\n        error: null\r\n    };\r\n\r\n    // componentDidMount() {\r\n    //     this.handleSubmit();\r\n    // }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const { searchTerm } = this.state;\r\n        if(searchTerm !== \"\"){\r\n            this.searchByTerm();\r\n        }\r\n    }\r\n\r\n    updateTerm = event => {\r\n        const { target: { value } } = event;\r\n        console.log(value);\r\n        this.setState({\r\n            searchTerm: value\r\n        })\r\n    }\r\n\r\n    searchByTerm = async () => {\r\n        const { searchTerm } = this.state;\r\n        this.setState({ loading: true });\r\n        try{\r\n            const { \r\n                data: { results: movieResults }\r\n            } = await moviesApi.search(searchTerm);\r\n            const { \r\n                data: { results: tvResults }\r\n            } = await tvApi.search(searchTerm);\r\n            this.setState({\r\n                movieResults,\r\n                tvResults\r\n            })\r\n            \r\n        }catch{\r\n            this.setState({ error: \"Can't find results.\" });\r\n        }finally{\r\n            this.setState({ loading: false });\r\n        }\r\n    }\r\n\r\n     \r\n\r\n    render() {\r\n        const { movieResults, tvResults, searchTerm, updateTerm, error, loading } = this.state;\r\n        return (\r\n            <SearchPresenter\r\n            movieResults={movieResults}\r\n            tvResults={tvResults}\r\n            searchTerm={searchTerm}\r\n            error={error}\r\n            loading={loading}\r\n            handleSubmit={this.handleSubmit}\r\n            updateTerm={this.updateTerm}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n    color: white;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0px 10px;\r\n    background-color: rgba(20, 20, 20, 0.8);\r\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n    display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n    width: 80px;\r\n    height: 50px;\r\n    text-align: center;\r\n    border-bottom: 5px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\r\n    transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname }}) => (\r\n    <Header>\r\n        <List>\r\n            <Item current={pathname === '/'}>\r\n                <SLink to=\"/\">Movies</SLink>\r\n            </Item>\r\n            <Item current={pathname === '/tv'}>\r\n                <SLink to=\"/tv\">TV</SLink>\r\n            </Item>\r\n            <Item current={pathname === '/search'}>\r\n                <SLink to=\"/search\">Search</SLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport ReactCountryFlag from \"react-country-flag\";\r\n\r\nconst STabs = styled(Tabs)`\r\n    width: 50%;\r\n    margin-top:20px;\r\n    max-height: 70vh;\r\n`;\r\n\r\nconst STabList = styled(TabList)`\r\n    display: flex;\r\n    width: 100%;\r\n`;\r\nSTabList.tabsRole = 'TabList';\r\n\r\nconst STab = styled(Tab)`\r\n    height: 34px;\r\n    padding: 8px 15px;\r\n    cursor: pointer;\r\n    background-color: rgba(255,255,255,0.1);\r\n    transition: border-bottom 0.1s linear;\r\n    box-sizing: border-box;\r\n    font-size: 16px;\r\n    \r\n    &.is-selected {\r\n    background-color: rgba(255,255,255,0.4);\r\n    border-bottom: 2px solid white;\r\n  }\r\n\r\n    &:focus {\r\n        background-color: rgba(255,255,255,0.4);\r\n    }\r\n`;\r\nSTab.tabsRole = 'Tab';\r\n\r\nconst STabPanel = styled(TabPanel)`\r\n    display: none;\r\n    padding: 20px 10px;\r\n    background-color: rgba(255,255,255,0.4);\r\n    overflow-y: auto;\r\n    max-height: 67vh;\r\n    &.is-selected {\r\n        display: block;\r\n    }\r\n`;\r\nSTabPanel.tabsRole = 'TabPanel';\r\n\r\nconst VideoContainer = styled.div`\r\n    background: no-repeat center/40% url(${require(\"../../assets/loadingBgSmall.gif\")});\r\n`;\r\n\r\nconst Video = styled.iframe`\r\n`;\r\n\r\nconst TitleInfo = styled.h3`\r\n    margin-bottom: 10px;\r\n    font-size: 16px;\r\n    border-bottom: 1px solid white;\r\n    padding-bottom: 10px;\r\n`;\r\n\r\nconst ProductionContainer = styled.div`\r\n    padding: 10px;\r\n`;\r\n\r\nconst CompaniesContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 140px);\r\n    gap: 15px;\r\n`;\r\n\r\nconst Company = styled.div`\r\n    height: 100px;\r\n    background: no-repeat center/50% url(${(props) => props.bgUrl});\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst ContriesContainer = styled.div`\r\n\r\n`;\r\n\r\nconst CountryName = styled.span`\r\n    display: inline-block;\r\n    margin-left: 10px;\r\n`;\r\n\r\nconst TextInfo = styled.p`\r\n    font-size: 14px;\r\n    text-align: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst GridContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 125px);\r\n    grid-gap: 25px;\r\n`;\r\n\r\nconst Item = styled.div`\r\n    text-align: center;\r\n`;\r\n\r\nconst ItemImg = styled.div`\r\n    height: 180px;\r\n    background-image: url(${props => props.bgUrl});\r\n    background-size: cover;\r\n    background-position: center center;\r\n`;\r\n\r\nconst ItemName = styled.p`\r\n    margin-bottom: 2px;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst ItemDate = styled.p``;\r\n\r\nconst TabPresenter = ({result}) => (\r\n    <STabs\r\n        selectedTabClassName='is-selected'\r\n        selectedTabPanelClassName='is-selected'\r\n        >\r\n        <STabList>\r\n            {result.videos.results && result.videos.results.length > 0\r\n            && <STab>Youtube</STab>\r\n            }\r\n            <STab>Production</STab>\r\n            <STab>Production Company</STab>\r\n            {result.created_by && result.created_by.length > 0 \r\n            && <STab>Created by</STab>\r\n            }\r\n            {result.seasons && result.seasons.length > 0 \r\n            && <STab>Seasons</STab>\r\n            }\r\n        </STabList>\r\n        {result.videos.results && result.videos.results.length > 0 &&\r\n        <STabPanel current={\"video\"}>\r\n            <VideoContainer>\r\n                <Video width=\"100%\" height=\"315\" src={`https://www.youtube.com/embed/${result.videos.results[0].key}`} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen />\r\n            </VideoContainer>\r\n        </STabPanel>\r\n        }\r\n        <STabPanel>  \r\n            <ProductionContainer>\r\n                <TitleInfo>Production Companies</TitleInfo>\r\n                <CompaniesContainer>\r\n                    {result.production_companies &&\r\n                    result.production_companies.length > 0 ?\r\n                    result.production_companies.map((company, index) =>\r\n                    <Company\r\n                        bgUrl={company.logo_path ? \r\n                        `https://image.tmdb.org/t/p/w300${company.logo_path}`\r\n                        : `/`}\r\n                        >\r\n                        {company.logo_path ? \r\n                        <TextInfo></TextInfo> \r\n                        : <TextInfo>{company.name}</TextInfo>}\r\n                    </Company>\r\n                        \r\n                    ) : \"None\"\r\n                    }\r\n                </CompaniesContainer>\r\n            </ProductionContainer>\r\n            <ProductionContainer>\r\n            <TitleInfo>Production Countries</TitleInfo>\r\n            {result.production_countries &&\r\n            result.production_countries.length > 0 ?\r\n            result.production_countries.map((country, index) => \r\n                <ContriesContainer>\r\n                <ReactCountryFlag\r\n                countryCode={country.iso_3166_1}\r\n                svg\r\n                style={{\r\n                    width: '2em',\r\n                    height: '2em',\r\n                }}\r\n                title={country.iso_3166_1}\r\n            /><CountryName>{country.name}</CountryName></ContriesContainer>\r\n            ) : \"None\"\r\n            }\r\n            </ProductionContainer>\r\n            \r\n        </STabPanel>\r\n        <STabPanel>\r\n            {result.production_companies &&\r\n            result.production_companies.length > 0 ? \r\n            result.production_companies.map((company, index) => \r\n                <TextInfo>{company.name}</TextInfo>\r\n            ) : \"None\"\r\n            }\r\n        </STabPanel>\r\n        {result.created_by && result.created_by.length > 0 &&\r\n        <STabPanel current={\"created_by\"}>\r\n            <GridContainer>\r\n                {\r\n                    result.created_by.map(profile => \r\n                    <Item>\r\n                        <ItemImg bgUrl={profile.profile_path ? \r\n                        `https://image.tmdb.org/t/p/w300${profile.profile_path}`\r\n                        : require(\"../../assets/noPosterSmall.png\")}/>\r\n                        <ItemName>{profile.name}</ItemName>\r\n                    </Item>)\r\n                }\r\n            </GridContainer>\r\n        </STabPanel>\r\n        }\r\n        {result.seasons && result.seasons.length > 0 &&\r\n        <STabPanel current={\"seasons\"}>\r\n            <GridContainer>\r\n                {\r\n                    result.seasons.map(season => \r\n                    <Item>\r\n                        <ItemImg bgUrl={season.poster_path ? \r\n                        `https://image.tmdb.org/t/p/w300${season.poster_path}`\r\n                        : require(\"../../assets/noPosterSmall.png\")}/>\r\n                        <ItemName>{result.name} {season.name}</ItemName>\r\n                        <ItemDate>{season.air_date}</ItemDate>\r\n                    </Item>)\r\n                }\r\n            </GridContainer>\r\n        </STabPanel>\r\n        }\r\n    </STabs>\r\n);\r\n\r\nTabPresenter.propTypes ={\r\n    result:PropTypes.object\r\n};\r\n\r\nexport default TabPresenter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Helmet } from 'react-helmet';\r\nimport Loader from 'Components/Loader';\r\nimport TabPresenter from './TabPresenter';\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px 50px 0px 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: top center;\r\n  background-size: 100%;\r\n  background-repeat: no-repeat;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width: 70%;\r\n    margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size: 32px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst CollectionLink = styled.span`\r\n    font-size: 13px;\r\n    width: 20px;\r\n    height: 10px;\r\n    background-color: rgba(0, 51, 204,0.5);\r\n    color: black;\r\n    border: 5px;\r\n    box-sizing: border-box;\r\n    padding: 2px 5px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    transition: 0.2s ease-in-out;\r\n    &:hover{\r\n        background-color: rgba(0, 51, 204,1);\r\n    }\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span`\r\n\r\n`;\r\n\r\nconst ImdbBtn = styled.a`\r\n    all: unset;\r\n    width: 20px;\r\n    height: 10px;\r\n    background-color: rgba(245,197,24,0.8);\r\n    color: black;\r\n    border: 5px;\r\n    box-sizing: border-box;\r\n    padding: 2px 5px;\r\n    font-weight: 600;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    transition: 0.2s ease-in-out;\r\n    &:hover{\r\n        background-color: rgba(245,197,24,1);\r\n    }\r\n`;\r\n\r\nconst Divider = styled.span`\r\n    margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    font-size: 12px;\r\n    opacity: 0.7;\r\n    line-height: 2;\r\n    width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({result, error, loading}) =>\r\n    loading ? (\r\n        <>\r\n        <Helmet>\r\n            <title>Loading | Nomflix</title>\r\n        </Helmet>\r\n        <Loader/>\r\n        </>\r\n    ) : (\r\n    <Container>\r\n        <Helmet>\r\n            <title>{result.original_title \r\n                    ? result.original_title \r\n                    : result.original_name} | Nomflix</title>\r\n        </Helmet>\r\n        <Backdrop \r\n            bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n        />\r\n        <Content>\r\n            <Cover \r\n                bgImage={result.poster_path \r\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                : require(\"../../assets/noPosterSmall.png\")\r\n                }\r\n            />\r\n            <Data>\r\n                <Title>\r\n                    {result.title ? result.title: ''}<br/> \r\n                    {result.original_title \r\n                    ? (result.original_title === result.title ? '' : result.original_title ) \r\n                    : (result.original_name === result.title ? '' : result.original_name )}\r\n                </Title>\r\n                <ItemContainer>\r\n                    {result.release_date \r\n                     ? <><Item>{result.release_date.substring(0,4)}</Item></>\r\n                     : <><Item>{result.first_air_date.substring(0,4)}</Item></>\r\n                     }\r\n                     {result.runtime \r\n                     ? <><Divider>•</Divider><Item>{result.runtime} min</Item></>\r\n                     : <><Divider>•</Divider><Item>{result.episode_run_time} min</Item></>\r\n                     }\r\n                     {result.runtime \r\n                     ? <><Divider>•</Divider><Item>{result.runtime} min</Item></>\r\n                     : <><Divider>•</Divider><Item>{result.episode_run_time} min</Item></>\r\n                     }\r\n                     <Divider>•</Divider>\r\n                     {result.genres && result.genres.map((genre, index) => \r\n                        index === result.genres.length-1 \r\n                        ? genre.name\r\n                        :`${genre.name} / `)\r\n                    }\r\n                    {result.imdb_id && (\r\n                        <>\r\n                            <Divider>•</Divider>\r\n                            <Item>\r\n                                <ImdbBtn href={`https://www.imdb.com/title/${result.imdb_id}/`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                Imdb\r\n                                </ImdbBtn>\r\n                            </Item>\r\n                        </>\r\n                    )\r\n                    }\r\n                    {result.belongs_to_collection ? \r\n                    <>\r\n                    <Divider>•</Divider>\r\n                    <Link to={`/collection/${result.belongs_to_collection.id}`}>\r\n                        <CollectionLink>See Series</CollectionLink>\r\n                    </Link>    \r\n                    </> : ''          \r\n                    }\r\n                </ItemContainer>\r\n                <Overview>\r\n                    {result.overview}\r\n                </Overview>\r\n                <TabPresenter result={result} />\r\n            </Data>\r\n        </Content>\r\n    </Container>\r\n);\r\n\r\nDetailPresenter.propTypes ={\r\n    result:PropTypes.object,\r\n    loading:PropTypes.bool.isRequired,\r\n    error:PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from './DetailContainer';\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    console.log(result);\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { Helmet } from 'react-helmet';\r\nimport Loader from 'Components/Loader';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n    height: calc(100vh - 50px);\r\n    width: 100%;\r\n    position: relative;\r\n    padding: 50px 50px 0 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    filter: blur(3px);\r\n    opacity: 0.5;\r\n    z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n    width: 30%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-size: 100%;\r\n    background-position: top center;\r\n    height: 100%;\r\n    border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    margin-left: 10px;\r\n    width: 70%;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin-top: 25px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill,125px);\r\n    grid-gap: 25px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size: 32px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst CollectionPresenter = ({result, error, loading}) => \r\nloading ?(\r\n    <>\r\n    <Helmet>\r\n        <title>Loaidng | Nomflix</title>\r\n    </Helmet>\r\n    <Loader/>\r\n    </>\r\n) : (\r\n    <Container>\r\n        <Helmet>\r\n            <title>\r\n                {result.name} | Nomfilx\r\n            </title>\r\n        </Helmet>\r\n        <Backdrop\r\n            bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n        />\r\n        <Content>\r\n            <Cover\r\n                bgImage={`https://image.tmdb.org/t/p/original${result.poster_path}`}\r\n            />\r\n            <Data>\r\n                <Title>{result.name}</Title>\r\n                {result.parts && result.parts.length > 0 && (\r\n                    <ItemContainer>\r\n                    {result.parts.map(item =>\r\n                        <Poster\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            imageUrl={item.poster_path}\r\n                            title={item.title}\r\n                            rating={item.vote_average}\r\n                            year={item.release_date}\r\n                            isMovie={true}\r\n                        />\r\n                    )}\r\n                    </ItemContainer>\r\n                )}\r\n            </Data>\r\n        </Content>\r\n    </Container>\r\n)\r\n;\r\n\r\nCollectionPresenter.prototype = {\r\n    result:PropTypes.object,\r\n    loading:PropTypes.bool.isRequired,\r\n    error:PropTypes.string\r\n};\r\n\r\nexport default CollectionPresenter;","import CollectionContainer from './CollectionContainer';\r\n\r\nexport default CollectionContainer;","import React from \"react\";\r\nimport CollectionPresenter from \"./CollectionPresenter\";\r\nimport { collectionApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        const {\r\n            location: {pathname}\r\n        } = props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isCollection: pathname.includes(\"/collection/\")\r\n        };\r\n        console.log(props);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const {\r\n            match: {\r\n                params: {id}\r\n            },\r\n            history: {push}\r\n        } = this.props;\r\n        const { isCollection } = this.state;\r\n        const parseId = parseInt(id);\r\n        if(isNaN(parseId)){\r\n            return push(\"/\");\r\n        }\r\n        let result = null;\r\n        try{\r\n            if(isCollection){\r\n                ({ data: result } = await collectionApi.collection(parseId));\r\n            }\r\n        }catch{\r\n            this.setState({ error: \"Can't find anyting\"});\r\n        }finally{\r\n            this.setState({ loading: false, result });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { result, error, loading } = this.state;\r\n        console.log(result);\r\n        return <CollectionPresenter result={result} error={error} loading={loading} />;\r\n    }\r\n}","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\r\nimport Home from 'Routes/Home';\r\nimport TV from 'Routes/TV';\r\nimport Search from 'Routes/Search';\r\nimport Header from 'Components/Header';\r\nimport Detail from 'Routes/Detail';\r\nimport Collection from 'Routes/Collection';\r\n\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n        <Header/>\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Home}/>\r\n            <Route path=\"/tv\" component={TV}/>\r\n            <Route path=\"/search\" component={Search}/>\r\n            <Route path=\"/movie/:id\" component={Detail} />\r\n            <Route path=\"/show/:id\" component={Detail} />\r\n            <Route path=\"/collection/:id\" component={Collection} />\r\n            <Redirect from=\"*\" to=\"/\"/>\r\n        </Switch> \r\n        </>\r\n    </Router>\r\n)","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    *{\r\n        box-sizing: border-box;\r\n    }\r\n    body{\r\n        font-family: Ubuntu;\r\n        font-size: 12px;\r\n        background-color: rgba(20, 20, 20, 1);\r\n        color: white;\r\n        padding-top: 50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nconst size = {\r\n    mobileS: '320px',\r\n    mobileM: '375px',\r\n    mobileL: '425px',\r\n    tablet: '768px',\r\n    laptop: '1024px',\r\n    laptopL: '1440px',\r\n    desktop: '2560px'\r\n }\r\n\r\nconst theme = {\r\n    mobileS: `(min-width: ${size.mobileS})`,\r\n    mobileM: `(min-width: ${size.mobileM})`,\r\n    mobileL: `(min-width: ${size.mobileL})`,\r\n    tablet: `(min-width: ${size.tablet})`,\r\n    laptop: `(min-width: ${size.laptop})`,\r\n    laptopL: `(min-width: ${size.laptopL})`,\r\n    desktop: `(min-width: ${size.desktop})`,\r\n    desktopL: `(min-width: ${size.desktop})`\r\n  };\r\n\r\n  export default theme;","import React from 'react';\nimport Router from \"Components/Router\"\nimport GlobalStyles from \"Components/GlobalStyles\"\nimport Theme from 'Components/Theme';\n\nfunction App() {\n  return (\n    <>\n      <Router/>\n      <GlobalStyles theme={Theme}/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\nimport \"./api\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}